import groovy.transform.Field
@Library('jenkins-pipeline-utils') _
SLACK_CHANNEL = '#tech-cap-updates'

@Field
def githubCredentialsId = 'fa186416-faac-44c0-a2fa-089aed50ca17'
@Field
def deAnsibleGithubUrl = 'git@github.com:ca-cwds/de-ansible.git'

releasePipeline()

def releasePipeline(){
  parameters([
    string(name: 'version', defaultValue: '', description: 'App version to deploy'),
    string(name: 'ADD_RACFID', defaultValue: 'AUTO1I', description: 'RACFID for valid user to add in tests'),
    string(name: 'WRONG_COUNTY_RACFID', defaultValue: 'AUTO1IA', description: 'RACFID for invalid user because of the wrong county')
  ])

  try {
    deployWithSmoke('integration')
    // integrationAcceptenceTestChrome()
  } catch(Exception exception) {
    currentBuild.result = "FAILURE"
    throw exception
  }
}

def deployWithSmoke(environment){
  node(environment){
    checkoutStage()
    rollbackDeployOnFailure('cap', environment, githubCredentialsId, ansibleCommand(environment, env.version)) {
      deployToStage(environment, env.version)
      updateManifestStage(environment, env.version)
      if (environment == 'integration')  {
        smokeTest(environment, env.version)
      }
    }
    if (environment == 'integration')  {
      integrationAcceptenceTest(environment, env.version)
    }
  }
}

def checkoutStage() {
  stage('Checkout') {
    deleteDir()
    checkout scm
   }
}

def deployToStage(environment, version) {
  stage("Deploy to $environment") {
    ws {
      git branch: "master", credentialsId: githubCredentialsId, url: deAnsibleGithubUrl
      sh ansibleCommand(environment, version)
    }
  }
}

def ansibleCommand(environment, version) {
  "ansible-playbook -e NEW_RELIC_AGENT=true -e APP_VERSION=$version -i inventories/$environment/hosts.yml deploy-cap.yml --vault-password-file ~/.ssh/vault.txt "
}

def updateManifestStage(environment, version) {
  stage("Update Manifest Version $environment") {
    updateManifest("cap", environment, githubCredentialsId, version)
  }
}

def smokeTest(environment, version){
  stage('Smoke test in Integration'){
    try {
      sh "docker-compose up -d county-admin-test"
      sh "docker-compose exec -T --env TZ=${TZ} --env COGNITO_USERNAME=${COG_USER} --env COGNITO_PASSWORD=${COG_PASS} --env COUNTY_AUTHORIZATION_ENABLED=true --env COUNTY_ADMIN_WEB_BASE_URL=https://web.${environment}.cwds.io/cap county-admin-test bundle exec rspec spec/acceptance/county/search_user_list_page_spec.rb --format documentation"
    } catch(Exception e) {
        throw e
    } finally {
      sh "docker-compose down"
    }
  }
}

def notify(String status) {
  status = status ?: 'SUCCESS'
    def colorCode = status == 'SUCCESS' ? '#00FF00' : '#FF0000'
    def summary = """*${status}*: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':\nMore detail in console output at <${env.BUILD_URL}|${env.BUILD_URL}>"""

    slackSend(
        channel: SLACK_CHANNEL,
        color: colorCode,
        message: summary
        )
}

def integrationAcceptenceTest(environment, version){
  try {

    stage('Integration Acceptance Test Firefox'){
      sh "docker-compose up -d --build county-admin-test-firefox"
      sleep 60
      sh "docker-compose exec -T --env TZ=${TZ} --env FIREFOX=true --env COGNITO_USERNAME=${COG_USER} --env COGNITO_PASSWORD=${COG_PASS} --env ADD_RACFID=${env.ADD_RACFID} --env WRONG_COUNTY_RACFID=${env.WRONG_COUNTY_RACFID} --env COUNTY_AUTHORIZATION_ENABLED=true --env COUNTY_ADMIN_WEB_BASE_URL=https://web.integration.cwds.io/cap county-admin-test-firefox bundle exec rspec spec/acceptance/county --format documentation"
      sh "docker-compose exec -T --env TZ=${TZ} --env FIREFOX=true --env COGNITO_USERNAME=${COG_OFFICE_USER} --env COGNITO_PASSWORD=${COG_OFFICE_PASS} --env ADD_RACFID=${env.ADD_RACFID} --env WRONG_COUNTY_RACFID=${env.WRONG_COUNTY_RACFID} --env COUNTY_AUTHORIZATION_ENABLED=true --env COUNTY_ADMIN_WEB_BASE_URL=https://web.integration.cwds.io/cap county-admin-test-firefox bundle exec rspec spec/acceptance/office --format documentation"
      sh "docker-compose exec -T --env TZ=${TZ} --env FIREFOX=true --env COGNITO_USERNAME=${COG_STATE_USER} --env COGNITO_PASSWORD=${COG_STATE_PASS} --env ADD_RACFID=${env.ADD_RACFID} --env WRONG_COUNTY_RACFID=${env.WRONG_COUNTY_RACFID} --env COUNTY_AUTHORIZATION_ENABLED=true --env COUNTY_ADMIN_WEB_BASE_URL=https://web.integration.cwds.io/cap county-admin-test-firefox bundle exec rspec spec/acceptance/state --format documentation"
    }
    stage('Integration Acceptance Test Chrome') {
      sh "docker-compose up -d --build county-admin-test"
      sleep 60
      sh "docker-compose exec -T --env TZ=${TZ} --env COGNITO_USERNAME=${COG_USER} --env COGNITO_PASSWORD=${COG_PASS} --env ADD_RACFID=${env.ADD_RACFID}  --env WRONG_COUNTY_RACFID=${env.WRONG_COUNTY_RACFID} --env COUNTY_AUTHORIZATION_ENABLED=true --env COUNTY_ADMIN_WEB_BASE_URL=https://web.integration.cwds.io/cap county-admin-test bundle exec rspec spec/acceptance/county --format documentation"
      sh "docker-compose exec -T --env TZ=${TZ} --env COGNITO_USERNAME=${COG_OFFICE_USER} --env COGNITO_PASSWORD=${COG_OFFICE_PASS} --env ADD_RACFID=${env.ADD_RACFID}  --env WRONG_COUNTY_RACFID=${env.WRONG_COUNTY_RACFID} --env COUNTY_AUTHORIZATION_ENABLED=true --env COUNTY_ADMIN_WEB_BASE_URL=https://web.integration.cwds.io/cap county-admin-test bundle exec rspec spec/acceptance/office --format documentation"
      sh "docker-compose exec -T --env TZ=${TZ} --env COGNITO_USERNAME=${COG_STATE_USER} --env COGNITO_PASSWORD=${COG_STATE_PASS} --env ADD_RACFID=${env.ADD_RACFID}  --env WRONG_COUNTY_RACFID=${env.WRONG_COUNTY_RACFID} --env COUNTY_AUTHORIZATION_ENABLED=true --env COUNTY_ADMIN_WEB_BASE_URL=https://web.integration.cwds.io/cap county-admin-test bundle exec rspec spec/acceptance/state --format documentation"
    }
  } catch(Exception e) {
    currentBuild.result = "FAILURE"
    throw e
  } finally {
    archiveArtifacts artifacts: 'tmp/*', excludes: '*/.keep', allowEmptyArchive: true
    sh "docker-compose down"
    cleanWs()
    notify(currentBuild.result)
  }
}
